service: lobby-serverless

provider:
    name: aws
    runtime: nodejs12.x
    stage: dev
    region: us-east-1
    environment:
        tableName: ${self:custom.tableName}
        bucketName: ${self:custom.bucketName}
    iamRoleStatements:
        - Effect: Allow
          Action:
              - dynamodb:*
              - s3:*
              - ses:*
          Resource: "*"

plugins:
    - serverless-offline
    - serverless-dynamodb-local

custom:
    tableName: player-points-table
    bucketName: myserverlessprojectuploadbucket-123123
    dynamodb:
        stages:
            - dev
        start:
            port: 8000
            inMemory: true
            migrate: true
        migration:
            dir: offline/migrations

functions:
    hello:
        handler: handler.hello
        events:
            - http:
                path: hello
                method: get

resources:
    Resources:
        DemoBucketUpload:
            Type: AWS::S3::Bucket
            Properties:
                BucketName: ${self:custom.bucketName}
        MyDynamoDbTable:
            Type: AWS::DynamoDB::Table
            Properties:
                TableName: ${self:custom.tableName}
                AttributeDefinitions:
                    - AttributeName: ID
                      AttributeType: S
                KeySchema:
                    - AttributeName: ID
                      KeyType: HASH
                BillingMode: PAY_PER_REQUEST
